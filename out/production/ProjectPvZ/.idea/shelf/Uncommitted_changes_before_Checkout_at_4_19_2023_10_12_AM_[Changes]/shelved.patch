Index: src/src/manager/World.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package manager;\r\n\r\nimport player.KeyBoardListener;\r\nimport player.MyMouseListener;\r\nimport scenes.GameScenes;\r\nimport scenes.Lose;\r\nimport scenes.Menu;\r\nimport scenes.Playing;\r\n\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.ArrayList;\r\nimport java.util.Random;\r\n\r\npublic class World extends JPanel implements Runnable {\r\n    private int screenWidth = 1024, screenHeight = 625;\r\n    private ArrayList<Image> img = new ArrayList<>();\r\n    private Random random;\r\n    private double FPS_SET = 200.0;\r\n    private double UPS_SET = 150.0;\r\n    private MyMouseListener myMouseListener;\r\n    private KeyBoardListener keyBoardListener;\r\n    private Lose lose;\r\n    private Menu menu;\r\n    private Playing playing;\r\n    private Toolkit t = Toolkit.getDefaultToolkit();\r\n    public void start() {\r\n        Thread thread = new Thread(this);\r\n        thread.start();\r\n    }\r\n    public World() {\r\n        setPreferredSize(new Dimension(screenWidth, screenHeight));\r\n        random = new Random();\r\n        initInput();\r\n        initClasses();\r\n        importImg();\r\n        loadSprites();\r\n        start();\r\n    }\r\n\r\n    public Lose getLose() {\r\n        return lose;\r\n    }\r\n\r\n    public Menu getMenu() {\r\n        return menu;\r\n    }\r\n\r\n    public Playing getPlaying() {\r\n        return playing;\r\n    }\r\n\r\n    public void initInput() {\r\n        myMouseListener = new MyMouseListener(this);\r\n        keyBoardListener = new KeyBoardListener();\r\n        addMouseListener(myMouseListener);\r\n        addMouseMotionListener(myMouseListener);\r\n        addKeyListener(keyBoardListener);\r\n        setFocusable(true);\r\n        requestFocus();\r\n    }\r\n\r\n    public void initClasses() {\r\n        lose = new Lose(this);\r\n        playing = new Playing(this);\r\n        menu = new Menu(this);\r\n    }\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n        render(g);\r\n    }\r\n\r\n    public void render(Graphics g) {\r\n        switch (GameScenes.gameScenes) {\r\n            case MENU:\r\n                menu.render(g, img.get(0));\r\n                break;\r\n            case PLAYING:\r\n                playing.render(g, img.get(1));\r\n                break;\r\n            case LOSE:\r\n                lose.render(g, img.get(2));\r\n                break;\r\n        }\r\n    }\r\n\r\n    public void importImg() {\r\n        img.add(t.getImage(getClass().getResource(\"/scene/menu.jpg\")));\r\n        img.add(t.getImage(getClass().getResource(\"/scene/lawn.png\")));\r\n        img.add(t.getImage(getClass().getResource(\"/scene/lose.png\")));\r\n\r\n    }\r\n\r\n    public void loadSprites() {\r\n    }\r\n\r\n    public int getRnd() {\r\n        return random.nextInt(32);\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        double timePerFrame = 1000000000.0 / FPS_SET;\r\n        long lastFrame = System.nanoTime();\r\n        double timePerUpdate = 1000000000.0 / UPS_SET;\r\n        long lastUpdate = System.nanoTime();\r\n        int updates = 0;\r\n        int frames = 0;\r\n        long lastTimeCheck = System.currentTimeMillis();\r\n        long now;\r\n        while (true) {\r\n            now = System.nanoTime();\r\n            //repaint game\r\n            if (now - lastFrame >= timePerFrame) {\r\n                lastFrame = now;\r\n                frames++;\r\n                repaint();\r\n            }\r\n            //update game\r\n            if (now - lastUpdate >= timePerUpdate) {\r\n                lastUpdate = now;\r\n                updates++;\r\n                //updates()\r\n            }\r\n            //check FPS & UPS\r\n            if (System.currentTimeMillis() - lastTimeCheck >= 1000) {\r\n                System.out.println(\"FPS: \" + frames + \" | UPS: \" + updates);\r\n                frames = 0;\r\n                updates = 0;\r\n                lastTimeCheck = System.currentTimeMillis();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/src/manager/World.java b/src/src/manager/World.java
--- a/src/src/manager/World.java	
+++ b/src/src/manager/World.java	
@@ -14,8 +14,8 @@
 import java.util.Random;
 
 public class World extends JPanel implements Runnable {
-    private int screenWidth = 1024, screenHeight = 625;
     private ArrayList<Image> img = new ArrayList<>();
+    private int screenWidth = 1024, screenHeight = 625;
     private Random random;
     private double FPS_SET = 200.0;
     private double UPS_SET = 150.0;
@@ -90,7 +90,6 @@
         img.add(t.getImage(getClass().getResource("/scene/menu.jpg")));
         img.add(t.getImage(getClass().getResource("/scene/lawn.png")));
         img.add(t.getImage(getClass().getResource("/scene/lose.png")));
-
     }
 
     public void loadSprites() {
